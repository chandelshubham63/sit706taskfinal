AWSTemplateFormatVersion: '2024-05-24'
Description: 'Application stack for the WordPress application'

Parameters:
  InstanceType:
    Type: String
    Default: 't2.micro'

  KeyName:
    Type: 'AWS::EC2::KeyPair::KeyName'

  WordPressVersion:
    Type: String
    Default: 'latest'

  DBName:
    Type: String
    Default: 'wordpress'

  DBUser:
    Type: String
    Default: 'admin'

  DBPassword:
    Type: String
    NoEcho: true

Mappings:
  AWSRegionAMI:
    us-east-1:
      AMI: 'ami-0c94855ba95c71c99'
    us-east-2:
      AMI: 'ami-0a59f0e26c55590e9'
    us-west-1:
      AMI: 'ami-08d2d8b00f270d03b'
    us-west-2:
      AMI: 'ami-0ceecbb0f30a902a6'
    eu-west-1:
      AMI: 'ami-0ea3405d2d2522162'
    eu-central-1:
      AMI: 'ami-065deacbcaac64cf2'
    ap-southeast-1:
      AMI: 'ami-0753e0e42b20e96e3'
    ap-southeast-2:
      AMI: 'ami-0f39d06d145e9bb63'
    ap-northeast-1:
      AMI: 'ami-06ee4e2261a87f547'
    sa-east-1:
      AMI: 'ami-0b032e878a66c3b68'

Resources:
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for web servers'
      VpcId: !ImportValue 'WordPress-VPC-ID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: '0.0.0.0/0'
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: '0.0.0.0/0'

  WebServerLaunchTemplate:
    Type: 'AWS::EC2::LaunchTemplate'
    Properties:
      LaunchTemplateData:
        InstanceType: !Ref InstanceType
        ImageId: !FindInMap [AWSRegionAMI, !Ref 'AWS::Region', AMI]
        KeyName: !Ref KeyName
        SecurityGroupIds:
          - !Ref WebServerSecurityGroup
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            yum -y update
            amazon-linux-extras enable php7.4
            yum -y install httpd php php-mysql
            systemctl start httpd
            systemctl enable httpd
            wget https://wordpress.org/wordpress-${WordPressVersion}.tar.gz
            tar -xzf wordpress-${WordPressVersion}.tar.gz
            cp -r wordpress/* /var/www/html/
            chown -R apache:apache /var/www/html
            sed -i 's/database_name_here/${DBName}/g' /var/www/html/wp-config.php
            sed -i 's/username_here/${DBUser}/g' /var/www/html/wp-config.php
            sed -i 's/password_here/${DBPassword}/g' /var/www/html/wp-config.php
            sed -i 's/localhost/${RDSEndpoint}/g' /var/www/html/wp-config.php
            systemctl restart httpd

  WebServerASG:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      VPCZoneIdentifier:
        - !ImportValue 'WordPress-PrivateSubnet1-ID'
        - !ImportValue 'WordPress-PrivateSubnet2-ID'
      LaunchTemplate:
        LaunchTemplateId: !Ref WebServerLaunchTemplate
        Version: !GetAtt WebServerLaunchTemplate.LatestVersionNumber
      MinSize: '1'
      MaxSize: '3'
      DesiredCapacity: '2'
      TargetGroupARNs:
        - !Ref ALBTargetGroup

  ALBSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for ALB'
      VpcId: !ImportValue 'WordPress-VPC-ID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: '0.0.0.0/0'

  ALBTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: 'WordPress-TargetGroup'
      Port: 80
      Protocol: HTTP
      VpcId: !ImportValue 'WordPress-VPC-ID'

  ApplicationLoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Scheme: 'internet-facing'
      SecurityGroups:
        - !Ref ALBSecurityGroup
      Subnets:
        - !ImportValue 'WordPress-PublicSubnet1-ID'
        - !ImportValue 'WordPress-PublicSubnet2-ID'

  ALBListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: 80
      Protocol: HTTP

  RDSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Security group for RDS'
      VpcId: !ImportValue 'WordPress-VPC-ID'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref WebServerSecurityGroup

  RDSSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: 'Subnet group for RDS'
      SubnetIds:
        - !ImportValue 'WordPress-PrivateSubnet1-ID'
        - !ImportValue 'WordPress-PrivateSubnet2-ID'

  RDSInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      Engine: MySQL
      EngineVersion: '8.0.23'
      DBInstanceClass: db.t3.micro
      AllocatedStorage: '20'
      StorageType: gp2
      MultiAZ: true
      DBName: !Ref DBName
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      VPCSecurityGroups:
        - !Ref RDSSecurityGroup
      DBSubnetGroupName: !Ref RDSSubnetGroup

Outputs:
  LoadBalancerDNSName:
    Description: 'DNS name of the Application Load Balancer'
    Value: !GetAtt ApplicationLoadBalancer.DNSName
